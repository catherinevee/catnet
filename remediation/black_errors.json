{
  "total_errors": 96,
  "unique_files": 1,
  "errors": [
    {
      "file": "C",
      "line": 54,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 73,
      "column": 33,
      "error": "f\"{' ' * (indent + 4)}{arg.strip()},",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 77,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 46,
      "column": 0,
      "error": "while break_point > 0 and current[break_point] not in ' ,(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 51,
      "column": 29,
      "error": "f'{expected_indent}{",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 19,
      "column": 35,
      "error": "level=logging.INFO, format=\"%(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 137,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 66,
      "column": 12,
      "error": "years",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 189,
      "column": 0,
      "error": "result = await client.request(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 34,
      "column": 7,
      "error": "\"\"\"Login request model\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 26,
      "column": 7,
      "error": "\"\"\"Dry run deployment request\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 16,
      "column": 7,
      "error": "\"\"\"Request for testing device connection\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 15,
      "column": 7,
      "error": "\"\"\"Request model for creating a device\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 26,
      "column": 7,
      "error": "\"\"\"Generic webhook payload\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 37,
      "column": 21,
      "error": "backward compatibility",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 77,
      "column": 27,
      "error": "check=True, capture_output=True, text=True)",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 16,
      "column": 7,
      "error": "\"\"\"Request for device health check\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 17,
      "column": 7,
      "error": "\"\"\"Request to create a deployment\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 60,
      "column": 6,
      "error": "f\"response.headers[\"X-Frame-Options\"] = \"DENY\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 258,
      "column": 7,
      "error": "\"\"\"Get default JWT handler instance\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 225,
      "column": 7,
      "error": "\"\"\"Get default MFA provider instance\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 24,
      "column": 7,
      "error": "\"\"\"SAML configuration for Service Provider\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 7,
      "error": "\"\"\"OAuth provider configuration\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 7,
      "error": "\"\"\"Represents a user session\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 82,
      "column": 8,
      "error": "client_ip = request.client.host",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 7,
      "error": "\"\"\"Workflow execution states\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 15,
      "column": 0,
      "error": "env_token = os.environ.get(\"CATNET_AUTH_TOKEN\")",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 7,
      "error": "\"\"\"Supported compliance frameworks\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 230,
      "error": "def __init__(self, allowed_origins: List[str] = None, allowed_methods: List[str] = None, allowed_headers: List[str] = None, exposed_headers: List[str] = None, allow_credentials: bool = True, max_age: int = 86400, ):\"\"\"        Initialize CORS configuration",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 15,
      "column": 7,
      "error": "\"\"\"Application settings\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 13,
      "column": 7,
      "error": "\"\"\"JSON structured logging formatter\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 38,
      "column": 15,
      "error": "Method implementation.",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 17,
      "column": 7,
      "error": "\"\"\"Types of metrics we collect\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 24,
      "column": 0,
      "error": "def __init__(self, service_name: str, certs_dir: str = \"certs\"):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 26,
      "column": 0,
      "error": "def __init__(self, redis_url: str = \"redis://localhost:6379\", default_rate: int = 100, default_period: int = 60, ): \"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 32,
      "column": 0,
      "error": "def __init__(self, database_url: str, pool_size: int = 20, max_overflow: int = 10, pool_timeout: int = 30, pool_recycle: int = 3600, use_null_pool: bool = False, ): \"\"\"        Initialize database pool manager",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 36,
      "column": 8,
      "error": "else:",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "CANARY = \"canary\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 25,
      "column": 0,
      "error": "def __init__(self,",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 31,
      "column": 8,
      "error": "self.success = success",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 20,
      "column": 0,
      "error": "CONNECTIVITY = \"connectivity\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 19,
      "column": 0,
      "error": "HEALTH_CHECK_FAILED = \"health_check_failed\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "deployment_id: str",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 51,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 19,
      "column": 0,
      "error": "PRE_DEPLOYMENT = \"pre_deployment\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 23,
      "column": 0,
      "error": "CANARY = \"canary\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 32,
      "column": 0,
      "error": "id: str = field(default_factory=lambda: str(uuid.uuid4()))",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 35,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 16,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 24,
      "column": 0,
      "error": "def __init__(self, max_workers: int = 5):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 34,
      "column": 0,
      "error": "CONFIG_COMMANDS = {",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 28,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 0,
      "error": "class DeviceConnection:",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "def __init__(self, simulation_mode: bool = True): \"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "CISCO_IOS = \"cisco_ios\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 14,
      "column": 0,
      "error": "id: str = field(default_factory=lambda: str(uuid.uuid4()))",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 19,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 38,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "COMMANDS = {",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 27,
      "column": 0,
      "error": "def __init__(self, vault_client: VaultClient):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 19,
      "column": 0,
      "error": "SYNTAX = \"syntax\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 27,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 35,
      "column": 0,
      "error": "id: str",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 26,
      "column": 0,
      "error": "CANARY = \"canary\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "PASSWORD = \"password\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 141,
      "column": 8,
      "error": "\"\"\"Merge two configuration dictionaries\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 16,
      "column": 0,
      "error": "url: str",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 141,
      "column": 8,
      "error": "\"\"\"Authenticate and get token\"\"\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 23,
      "column": 0,
      "error": "GITHUB = \"github\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 46,
      "column": 31,
      "error": "ssh_command = f\"ssh -i {ssh_key_path} -o \\\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 22,
      "column": 0,
      "error": "CRITICAL = \"critical\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 23,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 16,
      "column": 0,
      "error": "name: str",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 80,
      "column": 0,
      "error": "accuracy: float",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 194,
      "column": 0,
      "error": "click.echo(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "COUNTER = \"counter\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 25,
      "column": 0,
      "error": "PASSWORD = \"password\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 20,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 101,
      "column": 0,
      "error": "if not await self._check_permission(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 21,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 27,
      "column": 0,
      "error": "STATIC = \"static\"",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 33,
      "column": 0,
      "error": "def __init__(self):",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 39,
      "column": 8,
      "error": "return self.pwd_context.verify(plain_password, hashed_password)",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 47,
      "column": 0,
      "error": "cipher = Cipher(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 72,
      "column": 12,
      "error": "roles=[\"user\"]",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 26,
      "column": 34,
      "error": "\"22\": 0.1",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 356,
      "column": 0,
      "error": "unindent does not match any outer indentation level",
      "type": "indentation_error"
    },
    {
      "file": "C",
      "line": 76,
      "column": 15,
      "error": "print(f\"  Valid {input_type}: {value} - {'PASS' if is_valid else",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 93,
      "column": 23,
      "error": "print(f\"  Total deployments after test: {summary['counters'][",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 174,
      "column": 0,
      "error": "auth_manager = AuthManager(",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 119,
      "column": 16,
      "error": "details={\"index\": i}",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 137,
      "column": 26,
      "error": "\"lockout_attempts\": 5}",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 360,
      "column": 16,
      "error": "SecretType.AWS_CREDENTIALS]",
      "type": "parse_error"
    },
    {
      "file": "C",
      "line": 402,
      "column": 12,
      "error": "input=\"secretpass\\n\",",
      "type": "parse_error"
    }
  ],
  "error_files": [
    "C"
  ]
}